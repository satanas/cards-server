{{!< editor }}
{{#if errors}}
<div data-alert class="alert-box alert radius">
  <ul>
  {{#errors}}
  <li>{{ message}}</li>
  {{/errors}}
  </ul>
  <a href="#" class="close">&times;</a>
</div>
{{/if}}

{{#if card}}
{{#isNew}}
<h1>New card</h1>
<form id="card_form" action="/cards" method="POST" enctype="multipart/form-data">
{{/isNew}}
{{^isNew}}
<h1>Edit card</h1>

<form id="card_form" action="/cards/{{ card.id }}" method="POST" enctype="multipart/form-data">
{{/isNew}}

{{/if}}
  <div class="row">
    <div class="columns small-4">
      {{> input_field name="name" value=card.name isNew=isNew }}
      {{> input_field name="mana" value=card.mana isNew=isNew }}
      {{> input_field name="attack" value=card.attack isNew=isNew }}
      {{> input_field name="health" value=card.health isNew=isNew }}
      {{> select_field name="type" isNew=isNew values=card.types }}

      <div class="row">
        <div id="form-field-image" class="columns">
        <label>Image
          <input type="file" id="image" name="image" value="{{ card.image }}" {{#if isNew}}required{{/if}} />
        </label>
        </div>
      </div>

      <div class="row">
        <div class="columns">
        <label>Flavor Text
          <textarea rows="3" name="flavorText">{{ card.flavorText }}</textarea>
        </label>
        </div>
      </div>
    </div>

    <div class="columns small-4">
      <div id="card-details" class="preview"></div>
    </div>

    <div class="columns small-4">
      {{#card.abilities}}
        {{> select_field name=name isNew=isNew values=values}}
      {{/card.abilities}}
    </div>

  <div class="columns small-12">
    <form id="enchantment_form" action="" method="POST">
    <fieldset>
      <legend>Enchantments</legend>

      <label>Info</label>
      <div class="row">
        <div class="columns small-6">
          {{> input_field name="description" value="" }}
        </div>
        <div class="columns small-6">
          {{> select_field name="event" values=card.events placeholder="n/a"}}
        </div>
      </div>

      <label>Target</label>
      <div class="row">
        <div class="columns small-4">{{> select_field name="target[select]" values=card.target.selects placeholder="n/a"}}</div>
        <div class="columns small-4">{{> select_field name="target[type]" values=card.target.types placeholder="n/a"}}</div>
        <div class="columns small-4">{{> select_field name="target[condition]" values=card.target.conditions placeholder="n/a"}}</div>
      </div>
      <div class="row">
        <div class="columns small-4">{{> select_field name="target[band]" values=card.target.bands placeholder="n/a"}}</div>
        <div class="columns small-4">{{> input_field name="target[class]" value="" labelWidth=5 inputWidth=7}}</div>
        <div class="columns small-4">{{> input_field name="target[quantity]" value="" labelWidth=5 inputWidth=7}}</div>
      </div>

      <label>Modifications</label>

      <div class="row">
        <table id="mods_table"></table>
      </div>

      <div class="row">
        <div class="columns small-4">{{> select_field name="mod[spell]" values=card.mod.spells placeholder="n/a"}}</div>
        <div class="columns small-4">{{> select_field name="mod[attribute]" values=card.mod.attributes placeholder="n/a"}}</div>
        <div class="columns small-4">{{> select_field name="mod[operation]" values=card.mod.operations placeholder="n/a"}}</div>
      </div>
      <div class="row">
        <div class="columns small-4">{{> select_field name="mod[ability]" values=card.mod.abilities placeholder="n/a"}}</div>
        <div class="columns small-4">{{> select_field name="mod[multiplier]" values=card.mod.multipliers placeholder="n/a"}}</div>
        <div class="columns small-4"> {{> input_field name="mod[value]" value="" labelWidth=5 inputWidth=7}} </div>
      </div>
      <div class="row">
        <button id="add_enchantment" type="submit">Add enchantment</button>
        <button id="cancel_enchantment" type="submit">Cancel</button>
      </div>
    </fieldset>
    </form>
  </div>

  </div>

  <div class="row buttons">
    <button id="save" type="submit">Save</button>
    <button id="cancel" type="button">Back</button>
  </div>
</form>
<script>

var model = null,
    newImage = null,
    cardView = null,
    mods = [
      {
        spell: 'attribute',
        attribute: 'attack',
        operation: 'add',
        ability: null,
        multiplier: null,
        value: 1
      }
    ];

$('#cancel').on('click', function() {
  window.location = '/cards';
});

if (window.File && window.FileReader && window.FileList && window.Blob) {
  $('#image').on('change', function(evt) {
    var file = evt.originalEvent.target.files[0];

    if (!file.type.match('image.*')) return;

    var reader = new FileReader();
    reader.onload = function(f) {
      newImage = event.target.result;
      $('#card-details > .image > img').attr('src', newImage);
    };
    reader.readAsDataURL(file);
  });
}

$(document).ready(function() {
  model = new Card({{{ card }}});
  cardView = new CardPopupView({model: model, popup: false});
  cardView.render(model);

  mods.forEach(function(m) {
    var record = '<tr>';
    record += '<td>' + m.spell + '</td>';
    record += '<td>' + m.attribute + '</td>';
    record += '<td>' + m.operation + '</td>';
    record += '<td>' + m.ability + '</td>';
    record += '<td>' + m.multiplier + '</td>';
    record += '<td>' + m.value + '</td>';
    record += '<td> Actions </td>';
    record += '</tr>';
    $('#mods_table').append(record);
  });

  $('form').on('keyup', function(value) {
    updateModel();
  });

  /* Set select color on load */
  $('select').each(function() {
    if ($(this).val() === 'true') {
      $(this).addClass('active');
    } else {
      $(this).removeClass('active');
    }
  });

  /* Set select color on change */
  $('select').on('change', function(value) {
    updateModel();
    if ($(this).val() === 'true') {
      $(this).addClass('active');
    } else {
      $(this).removeClass('active');
    }
  });

  $('form').on('submit', function(ev) {
    ev.preventDefault();

    $('small.field-error').remove();
    $('input.field-error').removeClass('field-error');

    $.ajax($(this).attr('action'), {
      data: new FormData($('form')[0]),
      method: $(this).attr('method'),
      processData: false,
      contentType: false,
      success: function(data) {
        if (data.redirect) {
          window.location = data.url;
        } else {
          model.set(data.card);
          showMessage('success', 'Card saved successfully');
        }
      },
      error: function(data) {
        data.responseJSON.errors.forEach(function(err) {
          if (err.field !== null) {
            var field = $('#form-field-' + err.field);
            field.append('<small class="field-error error">' + err.message + '</small>');
            $('#form-field-' + err.field + ' > input').addClass('field-error');
          } else {
            showMessage('alert', err.message);
          }
        });
      }
    });
  });
});

function updateModel() {
  var data = $('select').serializeObject();
  for (var attr in data) {
    data[attr] = (data[attr] === 'true') ? true : false;
  }
  _.extend(data, $('input').serializeObject());
  _.extend(data, $('textarea').serializeObject());
  model.set(data);
  if (newImage) {
    $('#card-details > .image > img').attr('src', newImage);
  }
}
{{#if flash}}
showMessage('{{ flash.type }}', '{{Â flash.message }}');
{{/if}}
</script>
