{{!< editor }}
{{#if errors}}
<div data-alert class="alert-box alert radius">
  <ul>
  {{#errors}}
  <li>{{ message}}</li>
  {{/errors}}
  </ul>
  <a href="#" class="close">&times;</a>
</div>
{{/if}}

{{#if card}}
{{#isNew}}
<h1>New card</h1>

<form id="card_form" action="/cards" method="POST">
{{/isNew}}
{{^isNew}}
<h1>Edit card</h1>

<form id="card_form" action="/cards/{{ card.id }}" method="POST">
{{/isNew}}

{{/if}}
  <div class="row">
    <div class="columns small-4">
      {{> input_field name="name" value=card.name isNew=isNew }}
      {{> input_field name="mana" value=card.mana isNew=isNew }}
      {{> input_field name="attack" value=card.attack isNew=isNew }}
      {{> input_field name="health" value=card.health isNew=isNew }}
      {{> select_field name="type" isNew=isNew values=card.types }}

      <div class="row">
        <div class="columns">
        <label>Image
          <input type="file" id="image" name="image" value="{{ card.image }}" {{#if isNew}}required{{/if}} />
        </label>
        </div>
      </div>

      <div class="row">
        <div class="columns">
        <label>Flavor Text
          <textarea rows="3" name="flavorText">{{ card.flavorText }}</textarea>
        </label>
        </div>
      </div>
    </div>

    <div class="columns small-4">
      <div id="card-details" class="preview"></div>
    </div>

    <div class="columns small-4">
      {{#card.abilities}}
        {{> select_field name=name isNew=isNew values=values}}
      {{/card.abilities}}
    </div>

  </div>
  <div class="row buttons">
    <button id="save" type="submit">Save</button>
    <button id="cancel" type="button">Back</button>
  </div>
</form>
<script>

var model = null,
    newImage = null,
    cardView = null;

$('#cancel').on('click', function() {
  window.location = '/cards';
});

if (window.File && window.FileReader && window.FileList && window.Blob) {
  $('#image').on('change', function(evt) {
    var file = evt.originalEvent.target.files[0];

    if (!file.type.match('image.*')) return;

    var reader = new FileReader();
    reader.onload = function(f) {
      newImage = event.target.result;
      $('#card-details > .image > img').attr('src', newImage);
    };
    reader.readAsDataURL(file);
  });
}

$(document).ready(function() {
  model = new Card({{{ card }}});
  cardView = new CardPopupView({model: model, popup: false});
  cardView.render(model);

  $('form').on('keyup', function(value) {
    updateModel();
  });

  /* Set select color on load */
  $('select').each(function() {
    if ($(this).val() === 'true') {
      $(this).addClass('active');
    } else {
      $(this).removeClass('active');
    }
  });

  /* Set select color on change */
  $('select').on('change', function(value) {
    updateModel();
    if ($(this).val() === 'true') {
      $(this).addClass('active');
    } else {
      $(this).removeClass('active');
    }
  });

  $('form').on('submit', function(ev) {
    $.ajax($(this).attr('action'), {
      data: $(this).serialize(),
      method: $(this).attr('method'),
      success: function(data) {
        model.set(data.card);
      },
      error: function(data) {
        console.log('error', data);
      }
    });
    ev.preventDefault();
  });
});

function updateModel() {
  var data = $('select').serializeObject();
  for (var attr in data) {
    data[attr] = (data[attr] === 'true') ? true : false;
  }
  _.extend(data, $('input').serializeObject());
  _.extend(data, $('textarea').serializeObject());
  model.set(data);
  if (newImage) {
    $('#card-details > .image > img').attr('src', newImage);
  }
}
</script>
